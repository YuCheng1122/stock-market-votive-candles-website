import * as echarts from 'echarts'
import ReactEcharts from 'echarts-for-react'
import ecStat from 'echarts-stat'
import { useEffect, useState } from 'react'

export default function LinearRegChart(props) {
	const tab = props.tab
	const stock = props.stock

	const data = tab.data.length > 0 ? tab.data : Array.from({ length: 243 }, () => Math.random() * 45)
	const stockPrice = [
		{
			id: 2330,
			data: [
				530, 528, 520, 524, 514, 530, 547, 560, 549, 540, 540, 535, 544, 541, 530, 516, 513, 509, 508, 501, 498, 505,
				495, 486, 487, 499, 498, 491, 476, 454, 440, 446, 436, 458, 467, 462, 450, 471, 475, 493, 496, 491, 495, 501,
				503, 500, 495, 502, 501, 509, 504, 492, 501, 500, 516, 512, 510, 500, 514, 517, 523, 525, 527, 520, 519, 512,
				504, 503, 508, 512, 499, 496, 505, 491, 485, 486, 489, 473, 475, 487, 493, 480, 477, 472, 467, 477, 471, 465,
				455, 447, 448, 438, 435, 422, 417, 429, 445, 451, 438, 402, 398, 395, 412, 397, 407, 396, 398, 390, 387, 371,
				376, 386, 380, 390, 392, 395, 384, 382, 390, 399, 417, 408, 442, 445, 480, 487, 485, 487, 482, 491, 492, 496,
				498, 481, 487, 490, 499, 493, 489, 478, 475, 472, 482, 475, 472, 481, 481, 471, 467, 458, 459, 468, 455, 457,
				457, 451, 446, 449, 453, 450, 459, 459, 481, 486, 485, 487, 500, 505, 503, 543, 522, 530, 540, 542, 526, 523,
				540, 540, 545, 541, 545, 525, 528, 518, 517, 516, 507, 518, 511, 522, 519, 516, 521, 524, 521, 522, 513, 516,
				510, 511, 505, 518, 512, 517, 533, 538, 539, 531, 525, 530, 535, 533, 530, 531, 529, 524, 520, 510, 516, 520,
				515, 510, 513, 511, 507, 498, 492, 494, 502, 501, 496, 498, 500, 504, 510, 503, 499, 496, 496, 505, 519, 530,
				532,
			],
		},
		{
			id: 2454,
			data: [
				846, 843, 830, 843, 833, 851, 878, 905, 905, 898, 905, 890, 930, 924, 930, 887, 880, 884, 873, 831, 840, 868,
				807, 689, 670, 678, 651, 661, 651, 612, 611, 615, 605, 636, 651, 637, 614, 634, 646, 648, 661, 662, 671, 716,
				705, 688, 681, 677, 682, 683, 694, 683, 686, 684, 717, 709, 694, 668, 670, 684, 706, 706, 703, 702, 693, 677,
				676, 667, 670, 678, 653, 657, 667, 648, 620, 631, 629, 619, 623, 627, 626, 615, 616, 600, 604, 605, 605, 591,
				580, 569, 568, 545, 543, 551, 548, 573, 599, 587, 566, 553, 549, 544, 585, 578, 588, 577, 570, 567, 588, 563,
				579, 589, 565, 590, 599, 599, 600, 597, 620, 620, 650, 660, 700, 697, 722, 729, 725, 722, 720, 713, 705, 728,
				727, 703, 713, 733, 741, 739, 739, 725, 716, 705, 729, 712, 709, 718, 681, 660, 656, 646, 654, 661, 660, 651,
				656, 638, 629, 625, 644, 636, 631, 660, 675, 694, 707, 715, 694, 704, 693, 739, 718, 724, 747, 751, 731, 717,
				744, 749, 740, 731, 732, 710, 711, 723, 726, 725, 713, 745, 723, 791, 775, 775, 784, 788, 768, 767, 756, 764,
				761, 758, 756, 773, 770, 771, 781, 793, 790, 780, 766, 773, 778, 787, 753, 749, 742, 756, 758, 750, 748, 709,
				688, 675, 673, 665, 676, 650, 649, 662, 665, 671, 680, 668, 675, 675, 677, 668, 668, 673, 680, 680, 685, 689,
				698,
			],
		},
		{
			id: 2603,
			data: [
				337.5, 360, 355, 357.5, 355, 361.25, 360, 351.25, 361.25, 361.25, 358.75, 361.25, 363.75, 350, 347.5, 326.25,
				328.75, 320, 298.75, 298.75, 273.75, 275, 255, 240.25, 246.75, 271.25, 271.25, 222.5, 211.5, 199.5, 206.25,
				219.25, 214.5, 221, 231.75, 230.75, 215.25, 217.75, 226.5, 223.25, 223.25, 229, 224.25, 232.5, 235.5, 230.25,
				229.25, 235, 230, 238.75, 241.5, 233.25, 233, 235, 248, 252.5, 262.5, 257.5, 257.5, 260, 248.75, 242.75, 245.75,
				244.5, 245, 240, 237.75, 230.25, 233, 233.75, 219.75, 220, 220.75, 215.5, 199.25, 200, 202, 202, 202, 202, 202,
				202, 202, 202, 169, 172.5, 166.5, 156, 158, 145.5, 153.5, 144, 144, 146, 149.5, 150.5, 155.5, 155.5, 155.5, 156,
				147, 144.5, 152.5, 140, 141, 144, 137, 135.5, 137.5, 139, 139, 142.5, 137.5, 137.5, 135, 137, 135, 139, 143.5,
				147.5, 148.5, 151, 150, 155.5, 155, 154.5, 154, 150.5, 147.5, 150.5, 153.5, 161, 160.5, 157.5, 161, 163, 162,
				158.5, 159, 152.5, 151.5, 151, 154.5, 154.5, 155, 152, 157, 164, 162, 158.5, 164, 171.5, 167.5, 162.5, 162.5,
				159, 160, 163, 160, 156, 156.5, 159, 155, 155.5, 156.5, 152.5, 152.5, 151.5, 152.5, 150.5, 152, 152, 156, 157,
				151, 151, 151.5, 150, 147, 143.5, 149, 146.5, 148, 146, 147, 155, 152.5, 158, 157, 156, 160.5, 163, 164.5, 166,
				161, 164.5, 165, 170.5, 171, 167, 159.5, 162, 162, 160.5, 161.5, 159.5, 160.5, 161, 160.5, 158.5, 158, 158.5,
				158, 163.5, 163.5, 164.5, 166.5, 166.5, 170, 174.5, 170, 168, 170.5, 166, 165, 162, 160, 159, 161.5, 155.5, 150,
				150.5, 151.5, 151, 151, 155, 151, 152.5, 152.5, 151, 151, 151, 150.5,
			],
		},
		{
			id: 2880,
			data: [
				21.95, 22.1, 22.15, 22.44, 22.39, 22.82, 23.16, 23.02, 22.68, 22.68, 22.73, 22.49, 22.68, 22.68, 22.44, 22,
				22.29, 22.29, 22.15, 21.91, 21.52, 22.29, 22.1, 22.2, 22.39, 22.39, 22.44, 22.24, 21.86, 21.66, 21.66, 21.91,
				21.37, 21.37, 21.42, 21.13, 20.7, 21.28, 21.23, 20.74, 21.03, 21.03, 20.99, 21.37, 21.42, 21.62, 21.62, 22.05,
				22.29, 22.34, 22.49, 22.34, 22.24, 22.2, 22.53, 22.73, 23.11, 23.55, 23.4, 23.6, 23.6, 23.55, 23.6, 23.45,
				23.35, 23.2, 22.9, 22.85, 23.15, 23.2, 22.95, 23, 23.25, 22.85, 22.75, 22.95, 23.2, 22.8, 23, 23.25, 23.2, 22.9,
				23.1, 23.4, 23.1, 23.15, 23.05, 22.8, 22.8, 22.55, 22.5, 22.45, 22.5, 22.25, 22.05, 22.25, 22.1, 22.3, 22, 21.5,
				21.6, 20.8, 20.8, 20.45, 20.55, 20.3, 20.4, 20.8, 20.8, 21.1, 21.2, 21.15, 21.05, 21.05, 21.4, 21.1, 20.85,
				21.3, 21.4, 21.6, 21.85, 21.6, 22.25, 22.25, 22.35, 22.05, 21.95, 21.7, 21.8, 21.95, 22, 22.35, 22.25, 22.05,
				22.35, 22.7, 22.8, 22.4, 22.25, 22.05, 22.6, 22.55, 22.65, 22.7, 22.35, 22.7, 22.7, 22.65, 22.85, 22.8, 22.65,
				22.75, 22.5, 22.6, 22.7, 22.45, 22.3, 22.45, 22.7, 22.65, 22.65, 22.8, 23.4, 23.5, 23.2, 22.85, 22.8, 23.2,
				22.95, 23.4, 22.75, 22.9, 22.8, 22.75, 22.6, 22.6, 22.6, 22.55, 22.7, 22.75, 23, 22.75, 22.8, 22.9, 23, 22.85,
				22.95, 22.95, 22.85, 22.85, 22.75, 22.75, 22.9, 23.05, 22.9, 22.8, 22.6, 22.5, 22.15, 21.95, 21.55, 21.65,
				21.45, 21.75, 22.05, 22.05, 22.1, 22.1, 22.15, 22.3, 22.2, 22.35, 22.5, 22.45, 22.5, 22.65, 22.55, 22.7, 22.8,
				22.7, 22.7, 22.8, 22.75, 22.8, 22.85, 22.8, 22.95, 22.8, 21.9, 21.9, 21.85, 21.95, 22, 22, 22.05, 22.2, 22.1,
				21.9, 21.95, 22.1, 22.35, 22.55, 22.75,
			],
		},
		{
			id: 3008,
			data: [
				1600, 1600, 1585, 1625, 1620, 1655, 1680, 1670, 1655, 1670, 1810, 1770, 1785, 1835, 1810, 1755, 1730, 1705,
				1680, 1675, 1620, 1660, 1600, 1615, 1660, 1705, 1710, 1700, 1725, 1690, 1735, 1755, 1710, 1880, 1870, 1880,
				1835, 1860, 1905, 1990, 1990, 1980, 1920, 1960, 1925, 1920, 1915, 1950, 1985, 2090, 2075, 2030, 2065, 2040,
				2100, 2080, 2115, 2090, 2080, 2070, 2070, 2105, 2075, 2035, 2060, 1970, 1910, 1900, 1945, 1985, 1895, 1945,
				1955, 1935, 1950, 1925, 1930, 2005, 1970, 2000, 1980, 1940, 1935, 1895, 1880, 1915, 1890, 1900, 1885, 1845,
				1880, 1710, 1710, 1675, 1635, 1710, 1745, 1835, 1845, 1695, 1750, 1745, 1800, 1800, 1765, 1780, 1805, 1725,
				1730, 1755, 1810, 1820, 1810, 1850, 1845, 1880, 1895, 1905, 1925, 1930, 1955, 1965, 2030, 2050, 2125, 2130,
				2315, 2280, 2270, 2275, 2280, 2325, 2260, 2275, 2270, 2295, 2290, 2290, 2290, 2290, 2260, 2245, 2190, 2200,
				2190, 2260, 2270, 2225, 2250, 2210, 2185, 2140, 2140, 2120, 2165, 2110, 2050, 2040, 2075, 2100, 2100, 2180,
				2225, 2180, 2190, 2160, 2005, 2050, 2075, 2165, 2125, 2215, 2220, 2245, 2215, 2215, 2235, 2210, 2255, 2210,
				2225, 2240, 2215, 2165, 2190, 2260, 2210, 2225, 2205, 2165, 2210, 2230, 2450, 2440, 2455, 2440, 2365, 2405,
				2330, 2315, 2255, 2250, 2230, 2280, 2300, 2305, 2300, 2260, 2200, 2190, 2200, 2175, 2150, 2135, 2145, 2160,
				2170, 2155, 2060, 2125, 2085, 2030, 2015, 2040, 2045, 2010, 2055, 2025, 2010, 1990, 2000, 1990, 1975, 2000,
				2015, 2025, 2075, 2095, 2110, 2190, 2175, 2210, 2260,
			],
		},
	]

	const [option, setOption] = useState(null)

	useEffect(() => {
		echarts.registerTransform(ecStat.transform.regression)

		let resultData = []
		data.forEach((item, i) => {
			let dataTemp = []
			let price = stockPrice.find((item) => item.id === stock)
			dataTemp.push(item)
			dataTemp.push(price.data[i])
			resultData.push(dataTemp)
		})

		const option = {
			title: {
				text: `${stock} 股價與${tab.label}的相關性分析`,
				left: 'center',
				textStyle: {
					color: '#252525',
					fontSize: '1.2rem',
				},
			},
			dataset: [
				{
					source: resultData,
				},
				{
					transform: {
						type: 'ecStat:regression',
						config: { method: 'linear', formulaOn: 'end' },
					},
				},
			],
			tooltip: {
				trigger: 'axis',
			},
			xAxis: {
				type: 'value',
				scale: true,
			},
			yAxis: {
				type: 'value',
				name: '收盤價',
				scale: true,
			},
			series: [
				{
					name: '',
					type: 'scatter',
				},
				{
					name: 'line',
					type: 'line',
					datasetIndex: 1,
					symbolSize: 0.1,
					symbol: 'circle',
					label: { show: true, fontSize: 16 },
					labelLayout: { dx: -20 },
					encode: { label: 2, tooltip: 1 },
				},
			],
			grid: {
				x: 40,
				y: 60,
				x2: 8,
				y2: 40,
			},
		}

		setOption(option)
	}, [tab, stock])

	return (
		<>
			{option && (
				<ReactEcharts
					option={option}
					style={{
						height: '100%',
						width: '100%',
					}}
				/>
			)}
		</>
	)
}
